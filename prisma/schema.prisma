// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  User
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique @db.VarChar(100)
  password   String    @db.VarChar(150)
  name       String    @db.VarChar(100)
  email      String    @unique @db.VarChar(100)
  role       Role      @default(User)
  token      String?   @db.VarChar(150)
  tokenExp   DateTime? @db.DateTime
  isActive   Boolean   @default(true)
  isVerified Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Contact    Contact[]

  @@map("users")
}

model Contact {
  id              Int      @id @default(autoincrement())
  first_name      String   @db.VarChar(100)
  last_name       String   @db.VarChar(100)
  email           String   @db.VarChar(100)
  phone           String   @db.Text
  social_linkedin String?  @db.VarChar(100)
  social_fb       String?  @db.VarChar(100)
  social_x        String?  @db.VarChar(100)
  social_yt       String?  @db.VarChar(100)
  social_ig       String?  @db.VarChar(100)
  social_github   String?  @db.VarChar(100)
  userId          Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user    User      @relation(fields: [userId], references: [id])
  Address Address[]

  @@map("contacts")
}

model Address {
  id         Int      @id @default(autoincrement())
  street     String   @db.VarChar(255)
  city       String   @db.VarChar(100)
  province   String   @db.VarChar(100)
  country    String   @db.VarChar(100)
  postalCode String   @db.VarChar(100)
  detail     String?  @db.VarChar(255)
  contactId  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  contact Contact @relation(fields: [contactId], references: [id])

  @@map("addresses")
}
